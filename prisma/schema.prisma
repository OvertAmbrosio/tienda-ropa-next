generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SaleStatus {
  PENDING    // Pendiente - orden web reci√©n creada
  PAID       // Pagada - pago confirmado
  ACCEPTED   // Aceptada - orden confirmada por admin
  SHIPPING   // En camino - enviando al cliente
  COMPLETED  // Finalizada - entregada o completada
  CANCELED   // Cancelada - orden cancelada
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String?
  passwordHash String
  createdAt    DateTime @default(now())
  roles        Role[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  price      Float
  stock      Int      @default(0)
  entryDate  DateTime @default(now())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  saleItems  SaleItem[]
}

model Sale {
  id           Int        @id @default(autoincrement())
  customerName String?
  customer     Customer?  @relation(fields: [customerId], references: [id])
  customerId   Int?
  saleDate     DateTime   @default(now())
  total        Float
  status       SaleStatus @default(PENDING)
  createdAt    DateTime   @default(now())
  items        SaleItem[]
}

model SaleItem {
  id         Int     @id @default(autoincrement())
  sale       Sale    @relation(fields: [saleId], references: [id])
  saleId     Int
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
  unitPrice  Float
  lineTotal  Float
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String?
  address   String?
  createdAt DateTime @default(now())
  sales     Sale[]
}
